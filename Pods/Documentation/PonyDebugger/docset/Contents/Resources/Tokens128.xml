<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/PDDebuggerCommandDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/PDDebuggerCommandDelegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>
			
			<NodeRef refid="128"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:causesRecompilationWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain causesRecompilationWithCallback:(void ( ^ ) ( NSNumber *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:causesRecompilationWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:supportsSeparateScriptCompilationAndExecutionWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain supportsSeparateScriptCompilationAndExecutionWithCallback:(void ( ^ ) ( NSNumber *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:supportsSeparateScriptCompilationAndExecutionWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:enableWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain enableWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:enableWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:disableWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain disableWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:disableWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setBreakpointsActiveWithActive:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setBreakpointsActiveWithActive:(NSNumber *)active callback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setBreakpointsActiveWithActive:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setBreakpointByUrlWithLineNumber:url:urlRegex:columnNumber:condition:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setBreakpointByUrlWithLineNumber:(NSNumber *)lineNumber url:(NSString *)url urlRegex:(NSString *)urlRegex columnNumber:(NSNumber *)columnNumber condition:(NSString *)condition callback:(void ( ^ ) ( NSString *breakpointId , NSArray *locations , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setBreakpointByUrlWithLineNumber:url:urlRegex:columnNumber:condition:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setBreakpointWithLocation:condition:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setBreakpointWithLocation:(PDDebuggerLocation *)location condition:(NSString *)condition callback:(void ( ^ ) ( NSString *breakpointId , PDDebuggerLocation *actualLocation , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setBreakpointWithLocation:condition:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:removeBreakpointWithBreakpointId:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain removeBreakpointWithBreakpointId:(NSString *)breakpointId callback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:removeBreakpointWithBreakpointId:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:continueToLocationWithLocation:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain continueToLocationWithLocation:(PDDebuggerLocation *)location callback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:continueToLocationWithLocation:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:stepOverWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain stepOverWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:stepOverWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:stepIntoWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain stepIntoWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:stepIntoWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:stepOutWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain stepOutWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:stepOutWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:pauseWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain pauseWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:pauseWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:resumeWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain resumeWithCallback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:resumeWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:searchInContentWithScriptId:query:caseSensitive:isRegex:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain searchInContentWithScriptId:(NSString *)scriptId query:(NSString *)query caseSensitive:(NSNumber *)caseSensitive isRegex:(NSNumber *)isRegex callback:(void ( ^ ) ( NSArray *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:searchInContentWithScriptId:query:caseSensitive:isRegex:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:canSetScriptSourceWithCallback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain canSetScriptSourceWithCallback:(void ( ^ ) ( NSNumber *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:canSetScriptSourceWithCallback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setScriptSourceWithScriptId:scriptSource:preview:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setScriptSourceWithScriptId:(NSString *)scriptId scriptSource:(NSString *)scriptSource preview:(NSNumber *)preview callback:(void ( ^ ) ( NSArray *callFrames , NSDictionary *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setScriptSourceWithScriptId:scriptSource:preview:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:restartFrameWithCallFrameId:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain restartFrameWithCallFrameId:(NSString *)callFrameId callback:(void ( ^ ) ( NSArray *callFrames , NSDictionary *result , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:restartFrameWithCallFrameId:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:getScriptSourceWithScriptId:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain getScriptSourceWithScriptId:(NSString *)scriptId callback:(void ( ^ ) ( NSString *scriptSource , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:getScriptSourceWithScriptId:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:getFunctionDetailsWithFunctionId:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain getFunctionDetailsWithFunctionId:(NSString *)functionId callback:(void ( ^ ) ( PDDebuggerFunctionDetails *details , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:getFunctionDetailsWithFunctionId:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setPauseOnExceptionsWithState:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setPauseOnExceptionsWithState:(NSString *)state callback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setPauseOnExceptionsWithState:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:evaluateOnCallFrameWithCallFrameId:expression:objectGroup:includeCommandLineAPI:doNotPauseOnExceptionsAndMuteConsole:returnByValue:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain evaluateOnCallFrameWithCallFrameId:(NSString *)callFrameId expression:(NSString *)expression objectGroup:(NSString *)objectGroup includeCommandLineAPI:(NSNumber *)includeCommandLineAPI doNotPauseOnExceptionsAndMuteConsole:(NSNumber *)doNotPauseOnExceptionsAndMuteConsole returnByValue:(NSNumber *)returnByValue callback:(void ( ^ ) ( PDRuntimeRemoteObject *result , NSNumber *wasThrown , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:evaluateOnCallFrameWithCallFrameId:expression:objectGroup:includeCommandLineAPI:doNotPauseOnExceptionsAndMuteConsole:returnByValue:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:compileScriptWithExpression:sourceURL:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain compileScriptWithExpression:(NSString *)expression sourceURL:(NSString *)sourceURL callback:(void ( ^ ) ( NSString *scriptId , NSString *syntaxErrorMessage , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:compileScriptWithExpression:sourceURL:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:runScriptWithScriptId:contextId:objectGroup:doNotPauseOnExceptionsAndMuteConsole:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain runScriptWithScriptId:(NSString *)scriptId contextId:(NSNumber *)contextId objectGroup:(NSString *)objectGroup doNotPauseOnExceptionsAndMuteConsole:(NSNumber *)doNotPauseOnExceptionsAndMuteConsole callback:(void ( ^ ) ( PDRuntimeRemoteObject *result , NSNumber *wasThrown , id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:runScriptWithScriptId:contextId:objectGroup:doNotPauseOnExceptionsAndMuteConsole:callback:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PDDebuggerCommandDelegate/domain:setOverlayMessageWithMessage:callback:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PDDebuggerDomain.h</DeclaredIn>			
			
			<Declaration>- (void)domain:(PDDebuggerDomain *)domain setOverlayMessageWithMessage:(NSString *)message callback:(void ( ^ ) ( id error ))callback</Declaration>
			
			
			<Anchor>//api/name/domain:setOverlayMessageWithMessage:callback:</Anchor>
		</Token>
		
	</File>
</Tokens>