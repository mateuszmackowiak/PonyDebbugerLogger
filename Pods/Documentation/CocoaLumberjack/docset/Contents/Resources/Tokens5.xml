<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DDLog.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DDLog</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/loggingQueue</TokenIdentifier>
			<Abstract type="html">Provides access to the underlying logging queue.
This may be helpful to Logger classes for things like thread synchronization.</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (dispatch_queue_t)loggingQueue</Declaration>
			
			
			<Anchor>//api/name/loggingQueue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/log:level:flag:context:file:function:line:tag:format:</TokenIdentifier>
			<Abstract type="html">Logging Primitive.</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)log:(BOOL)synchronous level:(int)level flag:(int)flag context:(int)context file:(const char *)file function:(const char *)function line:(int)line tag:(id)tag format:(NSString *)format, ...</Declaration>
			
			
			<Anchor>//api/name/log:level:flag:context:file:function:line:tag:format:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/log:level:flag:context:file:function:line:tag:format:args:</TokenIdentifier>
			<Abstract type="html">Logging Primitive.</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)log:(BOOL)asynchronous level:(int)level flag:(int)flag context:(int)context file:(const char *)file function:(const char *)function line:(int)line tag:(id)tag format:(NSString *)format args:(va_list)argList</Declaration>
			
			
			<Anchor>//api/name/log:level:flag:context:file:function:line:tag:format:args:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/flushLog</TokenIdentifier>
			<Abstract type="html">Since logging can be asynchronous, there may be times when you want to flush the logs.
The framework invokes this automatically when the application quits.</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)flushLog</Declaration>
			
			
			<Anchor>//api/name/flushLog</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/addLogger:</TokenIdentifier>
			<Abstract type="html">Loggers</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)addLogger:(id&lt;DDLogger&gt;)logger</Declaration>
			
			
			<Anchor>//api/name/addLogger:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/removeLogger:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)removeLogger:(id&lt;DDLogger&gt;)logger</Declaration>
			
			
			<Anchor>//api/name/removeLogger:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/removeAllLoggers</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)removeAllLoggers</Declaration>
			
			
			<Anchor>//api/name/removeAllLoggers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/registeredClasses</TokenIdentifier>
			<Abstract type="html">Registered Dynamic Logging</Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)registeredClasses</Declaration>
			
			
			<Anchor>//api/name/registeredClasses</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/registeredClassNames</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)registeredClassNames</Declaration>
			
			
			<Anchor>//api/name/registeredClassNames</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/logLevelForClass:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (int)logLevelForClass:(Class)aClass</Declaration>
			
			
			<Anchor>//api/name/logLevelForClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/logLevelForClassWithName:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (int)logLevelForClassWithName:(NSString *)aClassName</Declaration>
			
			
			<Anchor>//api/name/logLevelForClassWithName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/setLogLevel:forClass:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)setLogLevel:(int)logLevel forClass:(Class)aClass</Declaration>
			
			
			<Anchor>//api/name/setLogLevel:forClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/DDLog/setLogLevel:forClassWithName:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDLog.h</DeclaredIn>			
			
			<Declaration>+ (void)setLogLevel:(int)logLevel forClassWithName:(NSString *)aClassName</Declaration>
			
			
			<Anchor>//api/name/setLogLevel:forClassWithName:</Anchor>
		</Token>
		
	</File>
</Tokens>