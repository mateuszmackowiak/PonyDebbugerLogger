<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DDAbstractDatabaseLogger.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DDAbstractDatabaseLogger</TokenIdentifier>
			<Abstract type="html">Welcome to Cocoa Lumberjack!</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/setSaveThreshold:</TokenIdentifier>
			<Abstract type="html">Specifies how often to save the data to disk.
Since saving is an expensive operation (disk io) it is not done after every log statement.
These properties allow you to configure how/when the logger saves to disk.</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSUInteger saveThreshold</Declaration>
			
			
			<Anchor>//api/name/saveThreshold</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DDAbstractDatabaseLogger/saveThreshold</TokenIdentifier>
			<Abstract type="html">Specifies how often to save the data to disk.
Since saving is an expensive operation (disk io) it is not done after every log statement.
These properties allow you to configure how/when the logger saves to disk.</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSUInteger saveThreshold</Declaration>
			
			
			<Anchor>//api/name/saveThreshold</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/setSaveInterval:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval saveInterval</Declaration>
			
			
			<Anchor>//api/name/saveInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DDAbstractDatabaseLogger/saveInterval</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval saveInterval</Declaration>
			
			
			<Anchor>//api/name/saveInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/setMaxAge:</TokenIdentifier>
			<Abstract type="html">It is likely you don&apos;t want the log entries to persist forever.
Doing so would allow the database to grow infinitely large over time.</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval maxAge</Declaration>
			
			
			<Anchor>//api/name/maxAge</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DDAbstractDatabaseLogger/maxAge</TokenIdentifier>
			<Abstract type="html">It is likely you don&apos;t want the log entries to persist forever.
Doing so would allow the database to grow infinitely large over time.</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval maxAge</Declaration>
			
			
			<Anchor>//api/name/maxAge</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/setDeleteInterval:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval deleteInterval</Declaration>
			
			
			<Anchor>//api/name/deleteInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DDAbstractDatabaseLogger/deleteInterval</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) NSTimeInterval deleteInterval</Declaration>
			
			
			<Anchor>//api/name/deleteInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/setDeleteOnEverySave:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) BOOL deleteOnEverySave</Declaration>
			
			
			<Anchor>//api/name/deleteOnEverySave</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DDAbstractDatabaseLogger/deleteOnEverySave</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>@property (assign, readwrite) BOOL deleteOnEverySave</Declaration>
			
			
			<Anchor>//api/name/deleteOnEverySave</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/savePendingLogEntries</TokenIdentifier>
			<Abstract type="html">Forces a save of any pending log entries (flushes log entries to disk).</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>- (void)savePendingLogEntries</Declaration>
			
			
			<Anchor>//api/name/savePendingLogEntries</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DDAbstractDatabaseLogger/deleteOldLogEntries</TokenIdentifier>
			<Abstract type="html">Removes any log entries that are older than maxAge.</Abstract>
			<DeclaredIn>DDAbstractDatabaseLogger.h</DeclaredIn>			
			
			<Declaration>- (void)deleteOldLogEntries</Declaration>
			
			
			<Anchor>//api/name/deleteOldLogEntries</Anchor>
		</Token>
		
	</File>
</Tokens>